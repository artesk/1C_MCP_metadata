                                 // Общий модуль МСР_ОбщегоНазначения
// Функции для работы с метаданными в рамках MCP сервера

#Область ПрограммныйИнтерфейс

// Получение структуры метаданных конфигурации
//
// Параметры:
//  Аргументы - Структура - параметры запроса:
//    * object_type - Строка - тип объектов метаданных (необязательный)
//
// Возвращаемое значение:
//  Структура - результат операции
//
Функция ПолучитьСтруктуруМетаданных(Аргументы) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("success", Истина);
	
	ТипОбъекта = "";
	Если ТипЗнч(Аргументы) = Тип("Структура") И Аргументы.Свойство("object_type") Тогда
		ТипОбъекта = Аргументы.object_type;
	КонецЕсли;
	
	Структура = Новый Структура;
	
	Если ПустаяСтрока(ТипОбъекта) Или ТипОбъекта = "Справочники" Тогда
		Справочники = ПолучитьОбъектыМетаданных(Метаданные.Справочники, "Справочник");
		Структура.Вставить("Справочники", Справочники);
	КонецЕсли;
	
	Если ПустаяСтрока(ТипОбъекта) Или ТипОбъекта = "Документы" Тогда
		Документы = ПолучитьОбъектыМетаданных(Метаданные.Документы, "Документ");
		Структура.Вставить("Документы", Документы);
	КонецЕсли;
	
	Если ПустаяСтрока(ТипОбъекта) Или ТипОбъекта = "РегистрыСведений" Тогда
		РегистрыСведений = ПолучитьОбъектыМетаданных(Метаданные.РегистрыСведений, "РегистрСведений");
		Структура.Вставить("РегистрыСведений", РегистрыСведений);
	КонецЕсли;
	
	Если ПустаяСтрока(ТипОбъекта) Или ТипОбъекта = "РегистрыНакопления" Тогда
		РегистрыНакопления = ПолучитьОбъектыМетаданных(Метаданные.РегистрыНакопления, "РегистрНакопления");
		Структура.Вставить("РегистрыНакопления", РегистрыНакопления);
	КонецЕсли;
	
	Если ПустаяСтрока(ТипОбъекта) Или ТипОбъекта = "Отчеты" Тогда
		Отчеты = ПолучитьОбъектыМетаданных(Метаданные.Отчеты, "Отчет");
		Структура.Вставить("Отчеты", Отчеты);
	КонецЕсли;
	
	Если ПустаяСтрока(ТипОбъекта) Или ТипОбъекта = "Обработки" Тогда
		Обработки = ПолучитьОбъектыМетаданных(Метаданные.Обработки, "Обработка");
		Структура.Вставить("Обработки", Обработки);
	КонецЕсли;
	
	Если ПустаяСтрока(ТипОбъекта) Или ТипОбъекта = "ПланыВидовХарактеристик" Тогда
		ПланыВидовХарактеристик = ПолучитьОбъектыМетаданных(Метаданные.ПланыВидовХарактеристик, "ПланВидовХарактеристик");
		Структура.Вставить("ПланыВидовХарактеристик", ПланыВидовХарактеристик);
	КонецЕсли;
	
	Если ПустаяСтрока(ТипОбъекта) Или ТипОбъекта = "ПланыСчетов" Тогда
		ПланыСчетов = ПолучитьОбъектыМетаданных(Метаданные.ПланыСчетов, "ПланСчетов");
		Структура.Вставить("ПланыСчетов", ПланыСчетов);
	КонецЕсли;
	
	Если ПустаяСтрока(ТипОбъекта) Или ТипОбъекта = "ПланыОбмена" Тогда
		ПланыОбмена = ПолучитьОбъектыМетаданных(Метаданные.ПланыОбмена, "ПланОбмена");
		Структура.Вставить("ПланыОбмена", ПланыОбмена);
	КонецЕсли;
	
	Если ПустаяСтрока(ТипОбъекта) Или ТипОбъекта = "БизнесПроцессы" Тогда
		БизнесПроцессы = ПолучитьОбъектыМетаданных(Метаданные.БизнесПроцессы, "БизнесПроцесс");
		Структура.Вставить("БизнесПроцессы", БизнесПроцессы);
	КонецЕсли;
	
	Если ПустаяСтрока(ТипОбъекта) Или ТипОбъекта = "Задачи" Тогда
		Задачи = ПолучитьОбъектыМетаданных(Метаданные.Задачи, "Задача");
		Структура.Вставить("Задачи", Задачи);
	КонецЕсли;
	
	Результат.Вставить("metadata", Структура);
	
	Возврат Результат;
	
КонецФункции

// Получение детальной информации об объекте метаданных
//
// Параметры:
//  Аргументы - Структура - параметры запроса:
//    * object_name - Строка - полное имя объекта метаданных
//
// Возвращаемое значение:
//  Структура - результат операции
//
Функция ПолучитьДеталиОбъектаМетаданных(Аргументы) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("success", Истина);
	
	Если ТипЗнч(Аргументы) <> Тип("Структура") Или НЕ Аргументы.Свойство("object_name") Тогда
		Результат.success = Ложь;
		Результат.Вставить("error", "Не указано имя объекта метаданных");
		Возврат Результат;
	КонецЕсли;
	
	ИмяОбъекта = Аргументы.object_name;
	
	Попытка
		ОбъектМетаданных = НайтиОбъектМетаданныхПоИмени(ИмяОбъекта);
		
		Если ОбъектМетаданных = Неопределено Тогда
			Результат.success = Ложь;
			Результат.Вставить("error", "Объект метаданных не найден: " + ИмяОбъекта);
			Возврат Результат;
		КонецЕсли;
		
		Детали = ПолучитьДеталиОбъекта(ОбъектМетаданных);
		Результат.Вставить("details", Детали);
		
	Исключение
		Результат.success = Ложь;
		Результат.Вставить("error", ОписаниеОшибки());
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

// Поиск объектов метаданных по различным критериям
//
// Параметры:
//  Аргументы - Структура - параметры запроса:
//    * search_query - Строка - строка поиска
//
// Возвращаемое значение:
//  Структура - результат операции
//
Функция НайтиВМетаданных(Аргументы) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("success", Истина);
	
	Если ТипЗнч(Аргументы) <> Тип("Структура") Или НЕ Аргументы.Свойство("search_query") Тогда
		Результат.success = Ложь;
		Результат.Вставить("error", "Не указана строка поиска");
		Возврат Результат;
	КонецЕсли;
	
	СтрокаПоиска = Аргументы.search_query;
	НайденныеОбъекты = Новый Массив;
	
	// Поиск в справочниках
	НайтиВКоллекции(Метаданные.Справочники, СтрокаПоиска, "Справочник", НайденныеОбъекты);
	
	// Поиск в документах
	НайтиВКоллекции(Метаданные.Документы, СтрокаПоиска, "Документ", НайденныеОбъекты);
	
	// Поиск в регистрах сведений
	НайтиВКоллекции(Метаданные.РегистрыСведений, СтрокаПоиска, "РегистрСведений", НайденныеОбъекты);
	
	// Поиск в регистрах накопления
	НайтиВКоллекции(Метаданные.РегистрыНакопления, СтрокаПоиска, "РегистрНакопления", НайденныеОбъекты);
	
	// Поиск в отчетах
	НайтиВКоллекции(Метаданные.Отчеты, СтрокаПоиска, "Отчет", НайденныеОбъекты);
	
	// Поиск в обработках
	НайтиВКоллекции(Метаданные.Обработки, СтрокаПоиска, "Обработка", НайденныеОбъекты);
	
	Результат.Вставить("found_objects", НайденныеОбъекты);
	Результат.Вставить("total_count", НайденныеОбъекты.Количество());
	
	Возврат Результат;
	
КонецФункции

// Проверка валидации запроса
//
// Параметры:
//  ТекстЗапроса - Строка - текст запроса:
//
// Возвращаемое значение:
//  Структура - результат операции
//

Функция ВалидацияЗапроса(Аргументы) Экспорт  
	Результат = Новый Структура;
	Результат.Вставить("success", Истина);
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = Аргументы.query_text;
	Попытка
		Запрос.НайтиПараметры(); 
		
	Исключение
		Результат.success = Ложь;
		Результат.Вставить("error", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));

	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьОбъектыМетаданных(КоллекцияМетаданных, Префикс)
	
	Объекты = Новый Массив;
	
	Для Каждого ОбъектМетаданных Из КоллекцияМетаданных Цикл
		ИнформацияОбОбъекте = Новый Структура;
		ИнформацияОбОбъекте.Вставить("name", ОбъектМетаданных.Имя);
		ИнформацияОбОбъекте.Вставить("full_name", Префикс + "." + ОбъектМетаданных.Имя);
		ИнформацияОбОбъекте.Вставить("synonym", ОбъектМетаданных.Синоним);
		ИнформацияОбОбъекте.Вставить("comment", ОбъектМетаданных.Комментарий);
		
		Объекты.Добавить(ИнформацияОбОбъекте);
	КонецЦикла;
	
	Возврат Объекты;
	
КонецФункции

Функция НайтиОбъектМетаданныхПоИмени(ПолноеИмя)
	
	ЧастиИмени = СтрРазделить(ПолноеИмя, ".");
	
	Если ЧастиИмени.Количество() <> 2 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТипОбъекта = ЧастиИмени[0];
	ИмяОбъекта = ЧастиИмени[1];
	
	Если ТипОбъекта = "Справочник" Тогда
		Возврат Метаданные.Справочники.Найти(ИмяОбъекта);
	ИначеЕсли ТипОбъекта = "Документ" Тогда
		Возврат Метаданные.Документы.Найти(ИмяОбъекта);
	ИначеЕсли ТипОбъекта = "РегистрСведений" Тогда
		Возврат Метаданные.РегистрыСведений.Найти(ИмяОбъекта);
	ИначеЕсли ТипОбъекта = "РегистрНакопления" Тогда
		Возврат Метаданные.РегистрыНакопления.Найти(ИмяОбъекта);
	ИначеЕсли ТипОбъекта = "Отчет" Тогда
		Возврат Метаданные.Отчеты.Найти(ИмяОбъекта);
	ИначеЕсли ТипОбъекта = "Обработка" Тогда
		Возврат Метаданные.Обработки.Найти(ИмяОбъекта);
	ИначеЕсли ТипОбъекта = "ПланВидовХарактеристик" Тогда
		Возврат Метаданные.ПланыВидовХарактеристик.Найти(ИмяОбъекта);
	ИначеЕсли ТипОбъекта = "ПланСчетов" Тогда
		Возврат Метаданные.ПланыСчетов.Найти(ИмяОбъекта);
	ИначеЕсли ТипОбъекта = "ПланОбмена" Тогда
		Возврат Метаданные.ПланыОбмена.Найти(ИмяОбъекта);
	ИначеЕсли ТипОбъекта = "БизнесПроцесс" Тогда
		Возврат Метаданные.БизнесПроцессы.Найти(ИмяОбъекта);
	ИначеЕсли ТипОбъекта = "Задача" Тогда
		Возврат Метаданные.Задачи.Найти(ИмяОбъекта);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьДеталиОбъекта(ОбъектМетаданных)
	
	Детали = Новый Структура;
	Детали.Вставить("name", ОбъектМетаданных.Имя);
	Детали.Вставить("synonym", ОбъектМетаданных.Синоним);
	Детали.Вставить("comment", ОбъектМетаданных.Комментарий);
	
	// Реквизиты
	Если ОбъектМетаданных.Реквизиты <> Неопределено Тогда
		Реквизиты = Новый Массив;
		Для Каждого Реквизит Из ОбъектМетаданных.Реквизиты Цикл
			ИнфоРеквизит = Новый Структура;
			ИнфоРеквизит.Вставить("name", Реквизит.Имя);
			ИнфоРеквизит.Вставить("synonym", Реквизит.Синоним);
			ИнфоРеквизит.Вставить("type", СтрокаТипа(Реквизит.Тип));
			Реквизиты.Добавить(ИнфоРеквизит);
		КонецЦикла;
		Детали.Вставить("attributes", Реквизиты);
	КонецЕсли;
	
	// Табличные части
	Если ОбъектМетаданных.ТабличныеЧасти <> Неопределено Тогда
		ТабличныеЧасти = Новый Массив;
		Для Каждого ТабЧасть Из ОбъектМетаданных.ТабличныеЧасти Цикл
			ИнфоТабЧасть = Новый Структура;
			ИнфоТабЧасть.Вставить("name", ТабЧасть.Имя);
			ИнфоТабЧасть.Вставить("synonym", ТабЧасть.Синоним);
			
			РеквизитыТабЧасти = Новый Массив;
			Для Каждого Реквизит Из ТабЧасть.Реквизиты Цикл
				ИнфоРеквизит = Новый Структура;
				ИнфоРеквизит.Вставить("name", Реквизит.Имя);
				ИнфоРеквизит.Вставить("synonym", Реквизит.Синоним);
				ИнфоРеквизит.Вставить("type", СтрокаТипа(Реквизит.Тип));
				РеквизитыТабЧасти.Добавить(ИнфоРеквизит);
			КонецЦикла;
			ИнфоТабЧасть.Вставить("attributes", РеквизитыТабЧасти);
			
			ТабличныеЧасти.Добавить(ИнфоТабЧасть);
		КонецЦикла;
		Детали.Вставить("tabular_sections", ТабличныеЧасти);
	КонецЕсли;
	
	Возврат Детали;
	
КонецФункции

Функция СтрокаТипа(ОписаниеТипа)
	
	Типы = Новый Массив;
	Для Каждого Тип Из ОписаниеТипа.Типы() Цикл
		Типы.Добавить(Строка(Тип));
	КонецЦикла;
	
	Возврат СтрСоединить(Типы, ", ");
	
КонецФункции

Процедура НайтиВКоллекции(КоллекцияМетаданных, СтрокаПоиска, Префикс, НайденныеОбъекты)
	
	Для Каждого ОбъектМетаданных Из КоллекцияМетаданных Цикл
		Если СтрНайти(ВРег(ОбъектМетаданных.Имя), ВРег(СтрокаПоиска)) > 0
			Или СтрНайти(ВРег(ОбъектМетаданных.Синоним), ВРег(СтрокаПоиска)) > 0
			Или СтрНайти(ВРег(ОбъектМетаданных.Комментарий), ВРег(СтрокаПоиска)) > 0 Тогда
			
			НайденныйОбъект = Новый Структура;
			НайденныйОбъект.Вставить("name", ОбъектМетаданных.Имя);
			НайденныйОбъект.Вставить("full_name", Префикс + "." + ОбъектМетаданных.Имя);
			НайденныйОбъект.Вставить("synonym", ОбъектМетаданных.Синоним);
			НайденныйОбъект.Вставить("comment", ОбъектМетаданных.Комментарий);
			НайденныйОбъект.Вставить("type", Префикс);
			
			НайденныеОбъекты.Добавить(НайденныйОбъект);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 