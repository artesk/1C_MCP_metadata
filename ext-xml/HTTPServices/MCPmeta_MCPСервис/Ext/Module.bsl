// Модуль HTTP-сервиса МСР_MCPСервис
// Реализация MCP (Model Context Protocol) сервера для работы с метаданными 1С

#Область ПрограммныйИнтерфейс

// Получение списка доступных инструментов MCP
Функция ПолучитьИнструменты(Запрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	
	Инструменты = Новый Массив;
	
	// Инструмент для получения структуры метаданных
	ИнструментСтруктура = Новый Структура;
	ИнструментСтруктура.Вставить("name", "get_metadata_structure");
	ИнструментСтруктура.Вставить("description", "Получение структуры метаданных конфигурации 1С");
	
	Схема = Новый Структура;
	Схема.Вставить("type", "object");
	
	Свойства = Новый Структура;
	СвойствоТип = Новый Структура;
	СвойствоТип.Вставить("type", "string");
	СвойствоТип.Вставить("description", "Тип объектов метаданных (Справочники, Документы, Отчеты и т.д.)");
	Свойства.Вставить("object_type", СвойствоТип);
	
	Схема.Вставить("properties", Свойства);
	ИнструментСтруктура.Вставить("inputSchema", Схема);
	
	Инструменты.Добавить(ИнструментСтруктура);
	
	// Инструмент для получения деталей объекта метаданных
	ИнструментДетали = Новый Структура;
	ИнструментДетали.Вставить("name", "get_metadata_object_details");
	ИнструментДетали.Вставить("description", "Получение детальной информации об объекте метаданных");
	
	СхемаДетали = Новый Структура;
	СхемаДетали.Вставить("type", "object");
	
	СвойстваДетали = Новый Структура;
	СвойствоИмя = Новый Структура;
	СвойствоИмя.Вставить("type", "string");
	СвойствоИмя.Вставить("description", "Полное имя объекта метаданных");
	СвойстваДетали.Вставить("object_name", СвойствоИмя);
	
	СхемаДетали.Вставить("properties", СвойстваДетали);
	ИнструментДетали.Вставить("inputSchema", СхемаДетали);
	
	Инструменты.Добавить(ИнструментДетали);
	
	// Инструмент для поиска по метаданным
	ИнструментПоиск = Новый Структура;
	ИнструментПоиск.Вставить("name", "search_metadata");
	ИнструментПоиск.Вставить("description", "Поиск объектов метаданных по различным критериям");
	
	СхемаПоиск = Новый Структура;
	СхемаПоиск.Вставить("type", "object");
	
	
	СвойствоЗапрос = Новый Структура;
	СвойствоЗапрос.Вставить("type", "string");
	СвойствоЗапрос.Вставить("description", "Строка поиска");
	
	СвойстваПоиск = Новый Структура("search_query", СвойствоЗапрос);
	
	СхемаПоиск.Вставить("properties", СвойстваПоиск);
	ИнструментПоиск.Вставить("inputSchema", СхемаПоиск);
	
	Инструменты.Добавить(ИнструментПоиск);  
	
	
	
	
	// Инструмент для валидации запросов
	ИнструментВалидация = Новый Структура;
	ИнструментВалидация.Вставить("name", "validate_query");
	ИнструментВалидация.Вставить("description", "Валидация синтаксиса запроса на языке запросов 1С");
	
	СхемаВалидация = Новый Структура;
	СхемаВалидация.Вставить("type", "object");
	
	СвойствоТекстЗапроса = Новый Структура;
	СвойствоТекстЗапроса.Вставить("type", "string");
	СвойствоТекстЗапроса.Вставить("description", "Текст запроса для проверки синтаксиса");
	
	СвойстваВалидация = Новый Структура("query_text", СвойствоТекстЗапроса);
	
	СхемаВалидация.Вставить("properties", СвойстваВалидация);
	ИнструментВалидация.Вставить("inputSchema", СхемаВалидация);
	
	Инструменты.Добавить(ИнструментВалидация);	
	
		
	Результат = Новый Структура("tools", Инструменты);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Результат);
	
	Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
	
	Возврат Ответ;
	
КонецФункции

// Вызов инструмента MCP
Функция ВызватьИнструмент(Запрос)  
	УстановитьПривилегированныйРежим(Истина);
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	
	Попытка
		
		// Парсинг тела запроса
		ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку("UTF-8");
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ТелоЗапроса);
		ДанныеЗапроса = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
				
		Результат = Неопределено;
		
		Если ДанныеЗапроса.name = "get_metadata_structure" Тогда
			Результат = MCPmeta_ОбщегоНазначения.ПолучитьСтруктуруМетаданных(ДанныеЗапроса.arguments);
		ИначеЕсли ДанныеЗапроса.name = "get_metadata_object_details" Тогда
			Результат = MCPmeta_ОбщегоНазначения.ПолучитьДеталиОбъектаМетаданных(ДанныеЗапроса.arguments); 
			
		ИначеЕсли ДанныеЗапроса.name = "search_metadata" Тогда
			Результат = MCPmeta_ОбщегоНазначения.НайтиВМетаданных(ДанныеЗапроса.arguments);  
		ИначеЕсли ДанныеЗапроса.name = "validate_query" Тогда
				Результат = MCPmeta_ОбщегоНазначения.ВалидацияЗапроса(ДанныеЗапроса.arguments); 	
		Иначе
			СтруктураОшибки = Новый Структура("error", "Неизвестный инструмент: " + ДанныеЗапроса.name);
			Результат = СтруктураОшибки;
		КонецЕсли;
		
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		ЗаписатьJSON(ЗаписьJSON, Результат);
		
		Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
		
	Исключение
		
		Ответ.КодСостояния = 500;
		СтруктураОшибки = Новый Структура("error", ОписаниеОшибки());
		
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		ЗаписатьJSON(ЗаписьJSON, СтруктураОшибки);
		
		Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
		
	КонецПопытки;
	
	Возврат Ответ;
	
КонецФункции   

#КонецОбласти